apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nameOverride }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "octopilot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "octopilot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "octopilot.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ .Values.nameOverride }}-sa
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.nameOverride }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{/* Shared Secret handling */}}
            {{- if .Values.sharedSecret.use }}
            {{- range $key, $value := .Values.sharedSecret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.sharedSecret.name }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{/* Application Secret environment variables */}}
            {{- if .Values.secret.enabled }}
            {{- range $key, $value := .Values.secret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.nameOverride }}-secret
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{/* Application Secret environment variables */}}
            {{- if .Values.secret.enabled }}
            {{- range $key, $value := .Values.secret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.nameOverride }}-secret
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{/* ConfigMap environment variables */}}
            {{- if and .Values.configMap.enabled .Values.configMap.data }}
            {{- range $key, $value := .Values.configMap.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.nameOverride }}-config
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}