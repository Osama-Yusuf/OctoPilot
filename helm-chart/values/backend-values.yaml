# Microservice Name
nameOverride: "backend"
fullnameOverride: ""

# All resources will use the nameOverride to be ${nameOverride}-<resource> for example:
# Deployment: ${nameOverride}-deployment

# How many pods should be running
replicaCount: 2

# Namespace configuration
namespace: default

image:
  repository: registry/backend
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: registry-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Shared Secret configuration (shared across microservices)
sharedSecret:
  name: shared-secret
  create: true  # Set to false by default since it might exist
  data:
    DB_URL: amRiYzpvcmFjbGU6dGhpbjpAbG9jYWxob3N0OjE1MjE6cGNw
    DB_USER: cGNw
    DB_PASS: cGNw

# Application-specific secret configuration
secret:
  enabled: false
  data:
    DUMMY_SECRET_KEY: dummy-secret-value

# Config map configuration
configMap:
  enabled: false
  data:
    DUMMY_KEY: dummy_value

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

route:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: backend.apps.stgocp.mwanitest.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    enabled: false

# Resource configuration
resources:
  requests:
    cpu: 100m     # Required for HPA to work
    memory: 128Mi # Required for HPA to work
  limits:
    cpu: 200m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# HPA configuration
# make sure to install metrics-server: https://github.com/kubernetes/metrics-server
# kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.6.1/components.yaml
# kubectl patch deployment metrics-server -n kube-system --type=json -p='[
#   {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"},
#   {"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP"}
# ]'
# Make sure to resources configuration is enabled and updated
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}
